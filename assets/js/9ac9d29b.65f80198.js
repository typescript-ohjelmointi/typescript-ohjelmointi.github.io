"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[124],{8069:(t,i,e)=>{e.r(i),e.d(i,{assets:()=>r,contentTitle:()=>n,default:()=>c,frontMatter:()=>o,metadata:()=>p,toc:()=>y});var s=e(5893),a=e(1151);const o={sidebar_position:8},n="Aputyypit",p={id:"tyypit/utility-types",title:"Aputyypit",description:"Kuten aikaisemmin k\xe4sitellyt unionit ja leikkaukset sek\xe4 typeof ja keyof ovat osoittaneet, uusia tyyppej\xe4 voidaan ilmaista monipuolisesti olemassa olevia tyyppej\xe4 hy\xf6dynt\xe4m\xe4ll\xe4.",source:"@site/docs/tyypit/08-utility-types.md",sourceDirName:"tyypit",slug:"/tyypit/utility-types",permalink:"/docs/tyypit/utility-types",draft:!1,unlisted:!1,editUrl:"https://github.com/typescript-ohjelmointi/typescript-ohjelmointi.github.io/tree/main/docs/tyypit/08-utility-types.md",tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8},sidebar:"tutorialSidebar",previous:{title:"Tyyppivahdit ja -predikaatit",permalink:"/docs/tyypit/type-guards"},next:{title:"JavaScript-koodin tyyppim\xe4\xe4rittelyt",permalink:"/docs/tyypit/typing-js-code"}},r={},y=[{value:"Pick, Omit ja Partial",id:"pick-omit-ja-partial",level:2}];function l(t){const i={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,a.a)(),...t.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.h1,{id:"aputyypit",children:"Aputyypit"}),"\n",(0,s.jsxs)(i.p,{children:["Kuten aikaisemmin k\xe4sitellyt ",(0,s.jsx)(i.a,{href:"/docs/tyypit/unions-intersections",children:"unionit ja leikkaukset"})," sek\xe4 ",(0,s.jsx)(i.a,{href:"/docs/tyypit/keyof-typeof",children:"typeof ja keyof"})," ovat osoittaneet, uusia tyyppej\xe4 voidaan ilmaista monipuolisesti olemassa olevia tyyppej\xe4 hy\xf6dynt\xe4m\xe4ll\xe4."]}),"\n",(0,s.jsx)(i.h2,{id:"pick-omit-ja-partial",children:"Pick, Omit ja Partial"}),"\n",(0,s.jsxs)(i.p,{children:["TypeScript-kielest\xe4 l\xf6ytyy edell\xe4 mainittujen tyyppien lis\xe4ksi kokoelma valmiita aputyyppej\xe4, joiden avulla voit esimerkiksi poimia olemassa olevasta tyypist\xe4 vain tietyt attribuutit uuteen tyyppiin (",(0,s.jsx)(i.em,{children:"pick"}),") tai vaihtoehtoisesti j\xe4tt\xe4\xe4 uudesta tyypist\xe4 tietyt attribuutit pois (",(0,s.jsx)(i.em,{children:"omit"}),"). Voit my\xf6s luoda tyyppej\xe4, joissa olemassa olevan tyypin kaikki attribuutit ovat valinnaisia (",(0,s.jsx)(i.em,{children:"partial"}),")."]}),"\n",(0,s.jsxs)(i.p,{children:["Tutustu aputyyppeihin tarkemmin ",(0,s.jsx)(i.a,{href:"https://www.typescriptlang.org/docs/handbook/utility-types.html",children:"TypeScriptin k\xe4sikirjassa"})," ja kokeile tutkia ja muokata esimerkiksi seuraavaa koodiesimerkki\xe4 omassa koodieditorissasi:"]}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-ts",children:'type Todo = {\n    title: string;\n    description: string;\n    completed: boolean;\n};\n\ntype TodoWithOnlyTitleAndDesc = Pick<Todo, "title" | "description">;\n\ntype TodoWithoutDescription = Omit<Todo, "description">;\n\ntype TodoWithEverythingGoes = Partial<Todo>;\n'})})]})}function c(t={}){const{wrapper:i}={...(0,a.a)(),...t.components};return i?(0,s.jsx)(i,{...t,children:(0,s.jsx)(l,{...t})}):l(t)}},1151:(t,i,e)=>{e.d(i,{Z:()=>p,a:()=>n});var s=e(7294);const a={},o=s.createContext(a);function n(t){const i=s.useContext(o);return s.useMemo((function(){return"function"==typeof t?t(i):{...i,...t}}),[i,t])}function p(t){let i;return i=t.disableParentContext?"function"==typeof t.components?t.components(a):t.components||a:n(t.components),s.createElement(o.Provider,{value:i},t.children)}}}]);