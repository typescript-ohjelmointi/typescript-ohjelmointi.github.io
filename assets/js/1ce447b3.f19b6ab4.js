"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[367],{4802:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>d,frontMatter:()=>a,metadata:()=>o,toc:()=>l});var i=n(5893),s=n(1151);const a={sidebar_position:6},r="Tyyppien unionit ja leikkaukset",o={id:"tyypit/unions-intersections",title:"Tyyppien unionit ja leikkaukset",description:"https://www.typescriptlang.org/docs/handbook/unions-and-intersections.html",source:"@site/docs/tyypit/05-unions-intersections.md",sourceDirName:"tyypit",slug:"/tyypit/unions-intersections",permalink:"/docs/tyypit/unions-intersections",draft:!1,unlisted:!1,editUrl:"https://github.com/typescript-ohjelmointi/typescript-ohjelmointi.github.io/tree/main/docs/tyypit/05-unions-intersections.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Geneeriset tyypit",permalink:"/docs/tyypit/generics"},next:{title:"Map-tyypit (mapped types)",permalink:"/docs/tyypit/mapped-types"}},c={},l=[{value:"Discriminated unions",id:"discriminated-unions",level:2},{value:"What about intersection of these two?",id:"what-about-intersection-of-these-two",level:2},{value:"Intersection type",id:"intersection-type",level:2},{value:"Taulukot (array)",id:"taulukot-array",level:3}];function p(e){const t={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"tyyppien-unionit-ja-leikkaukset",children:"Tyyppien unionit ja leikkaukset"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"https://www.typescriptlang.org/docs/handbook/unions-and-intersections.html",children:"https://www.typescriptlang.org/docs/handbook/unions-and-intersections.html"})}),"\n",(0,i.jsx)(t.p,{children:"A union type is a type formed from two or more other types, representing values that may be any one of those types. We refer to each of these types as the union\u2019s members. What about mathematical union & intersection vs. typescript versions, a bit confusing?"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-ts",children:"type StringNumberBool = string | number | boolean;\n"})}),"\n",(0,i.jsx)(t.p,{children:"If we have a value that is a union type, we can only access members that are common to all types in the union."}),"\n",(0,i.jsxs)(t.admonition,{title:"k\xe4\xe4nn\xf6svirhe",type:"warning",children:[(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-ts",children:"const printId = (id: number | string) => {\n  id.toUpperCase();\n};\n"})}),(0,i.jsxs)(t.p,{children:["Virhe: ",(0,i.jsx)(t.strong,{children:"toUpperCase does not exist in number | string"})]})]}),"\n",(0,i.jsx)(t.h2,{id:"discriminated-unions",children:"Discriminated unions"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"https://www.typescriptlang.org/docs/handbook/2/objects.html",children:"https://www.typescriptlang.org/docs/handbook/2/objects.html"})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-ts",children:'interface Rectangle {\n    kind: "rectangle"; //discriminant property\n    width: number;\n    height: number;\n}\n\ninterface Circle {\n  kind: "circle"; //discriminant property\n  radius: number;\n}\n\ntype Shape = Rectangle | Circle; //discriminated union https://basarat.gitbook.io/typescript/type-system/discriminated-unions\n\nconst shape: Shape = { kind: "circle", radius: 5 };\nshape; // circle\n\nconst shape2: Shape = { kind: "rectangle", radius: 5 }; //not a valid type found from Shape union\n'})}),"\n",(0,i.jsx)(t.h2,{id:"what-about-intersection-of-these-two",children:"What about intersection of these two?"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-ts",children:'type RectangleCircleNever = Rectangle & Circle; //never union because of kind-property\ntype RectangleCircle = Omit<Rectangle, "kind"> &\n  Omit<Circle, "kind"> & { kind: "circlerect" }; //union with Omit utility type\n\nconst shape4: RectangleCircle = {\n  kind: "circlerect",\n  radius: 5,\n  width: 3,\n  height: 4,\n};\n'})}),"\n",(0,i.jsx)(t.h2,{id:"intersection-type",children:"Intersection type"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"https://javascript.plainenglish.io/using-typescript-intersection-types-like-a-pro-a55da6a6a5f7",children:"https://javascript.plainenglish.io/using-typescript-intersection-types-like-a-pro-a55da6a6a5f7"})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-ts",children:"//An intersection type combines multiple types into one\ntype Qube = Rectangle & { length: number };\n//or with extends and interfaces\ninterface QubeInterface extends Rectangle {\n  length: number;\n}\n//another example\ninterface RequestWithPatientId extends Request {\n  patientId: number;\n}\n"})}),"\n",(0,i.jsx)(t.h3,{id:"taulukot-array",children:"Taulukot (array)"}),"\n",(0,i.jsxs)(t.p,{children:["My\xf6s taulukot ovat tyypitettyj\xe4 siin\xe4 miss\xe4 yksitt\xe4iset muuttujat, esim. ",(0,i.jsx)(t.code,{children:"string[]"})," tai ",(0,i.jsx)(t.code,{children:"number[]"}),"."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-ts",children:"let faces = ['\ud83d\ude00', '\ud83d\ude41'];          // string[]\nlet numbers = [7, 100, 42];         // number[]\n"})}),"\n",(0,i.jsxs)(t.p,{children:["Taulukot voivat sis\xe4lt\xe4\xe4 useita eri tyyppisi\xe4 arvoja, jos niiden tyypiksi m\xe4\xe4ritell\xe4\xe4n ",(0,i.jsx)(t.a,{href:"https://www.typescriptlang.org/docs/handbook/2/everyday-types.html#union-types",children:'tyyppien yhdistelm\xe4, eli "unioni"'}),". T\xe4ss\xe4 tapauksessa, kun arvot ovat joko merkkijonoja tai numeroita, on taulukon tyyppi ",(0,i.jsx)(t.code,{children:"(string | number)[]"}),":"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-ts",children:"let values = [1, 2, 3, 'one', 'two', 'three'];  // (string | number)[]\nlet combo = [...faces, ...numbers];             // (string | number)[]\n"})}),"\n",(0,i.jsxs)(t.p,{children:["Taulukoita k\xe4sitelt\xe4ess\xe4 TypeScript ei aina voi tiet\xe4\xe4, mink\xe4 tyyppinen arvo tietyst\xe4 indeksist\xe4 l\xf6ytyy, tai l\xf6ytyyk\xf6 siit\xe4 lainkaan arvoa. T\xe4ll\xf6in t\xf6rm\xe4\xe4t helposti tilanteeseen, jossa TypeScript p\xe4\xe4ttelee tyypiksi esimerkiksi ",(0,i.jsx)(t.code,{children:"undefined | string | number"}),". Jos olet aivan varma tietyn arvon tyypist\xe4, voit k\xe4ytt\xe4\xe4 ",(0,i.jsx)(t.code,{children:"as"}),"-avainsanaa, joka ohittaa TypeScriptin p\xe4\xe4ttelylogiikan:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-ts",children:"let values = [1, 2, 3, 'one', 'two', 'three'];\n\nlet first = all.at(0);              // p\xe4\xe4telty tyyppi on `first: (string | number)`\n\nlet second = all.at(1) as number;   // `as` ohittaa TypeScriptin tyyppitarkastuksen\n"})}),"\n",(0,i.jsxs)(t.p,{children:["Edell\xe4 k\xe4ytetty ",(0,i.jsxs)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/at",children:[(0,i.jsx)(t.code,{children:"at"}),"-metodi"]})," on osa JavaScripti\xe4 ja se toimii sek\xe4 positiivisilla ett\xe4 negatiivisilla indekseill\xe4:"]}),"\n",(0,i.jsxs)(t.blockquote,{children:["\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.em,{children:'"The at() method takes an integer value and returns the item at that index, allowing for positive and negative integers. Negative integers count back from the last item in the array."'})}),"\n",(0,i.jsxs)(t.p,{children:["Mozilla. ",(0,i.jsx)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/at",children:"Array.prototype.at()"})]}),"\n"]})]})}function d(e={}){const{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>o,a:()=>r});var i=n(7294);const s={},a=i.createContext(s);function r(e){const t=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(a.Provider,{value:t},e.children)}}}]);