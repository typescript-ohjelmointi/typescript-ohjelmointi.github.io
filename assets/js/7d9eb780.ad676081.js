"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[34],{9784:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>p});var n=i(5893),a=i(1151);const s={sidebar_position:1},r="Perustietotyypit",o={id:"tyypit/tyyppijarjestelma",title:"Perustietotyypit",description:"Monet TypeScriptin oppaat keskittyv\xe4t omien tyyppien m\xe4\xe4rittelyyn, mutta alkuun p\xe4\xe4semiseksi on hyv\xe4 perehty\xe4 TypeScriptin valmiisiin perustietotyyppeihin kuten string, number ja boolean. Perustietotyypit on dokumentoitu selke\xe4sti TypeScript-k\xe4sikirjan luvussa Everyday Types ja olemme koonneet tiivistelm\xe4n aiheesta my\xf6s t\xe4lle sivulle.",source:"@site/docs/tyypit/01-tyyppijarjestelma.md",sourceDirName:"tyypit",slug:"/tyypit/tyyppijarjestelma",permalink:"/docs/tyypit/tyyppijarjestelma",draft:!1,unlisted:!1,editUrl:"https://github.com/typescript-ohjelmointi/typescript-ohjelmointi.github.io/tree/main/docs/tyypit/01-tyyppijarjestelma.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Tyypit",permalink:"/docs/category/tyypit"},next:{title:"Type ja interface",permalink:"/docs/tyypit/type-ja-interface"}},l={},p=[{value:"Muuttujien tyypit",id:"muuttujien-tyypit",level:2},{value:"Tyyppien p\xe4\xe4tteleminen (type inference)",id:"tyyppien-p\xe4\xe4tteleminen-type-inference",level:2},{value:"Funktioiden tyypit",id:"funktioiden-tyypit",level:3},{value:"Taulukot (array)",id:"taulukot-array",level:3},{value:"Suorituksen aikaiset tyypit",id:"suorituksen-aikaiset-tyypit",level:3},{value:"Any ja unknown",id:"any-ja-unknown",level:3},{value:"Tyypin tarkastaminen ajonaikaisesti",id:"tyypin-tarkastaminen-ajonaikaisesti",level:3},{value:"Esimerkki: repeat",id:"esimerkki-repeat",level:4}];function y(e){const t={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",p:"p",pre:"pre",strong:"strong",...(0,a.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"perustietotyypit",children:"Perustietotyypit"}),"\n",(0,n.jsxs)(t.p,{children:["Monet TypeScriptin oppaat keskittyv\xe4t omien tyyppien m\xe4\xe4rittelyyn, mutta alkuun p\xe4\xe4semiseksi on hyv\xe4 perehty\xe4 TypeScriptin valmiisiin perustietotyyppeihin kuten ",(0,n.jsx)(t.code,{children:"string"}),", ",(0,n.jsx)(t.code,{children:"number"})," ja ",(0,n.jsx)(t.code,{children:"boolean"}),". Perustietotyypit on dokumentoitu selke\xe4sti TypeScript-k\xe4sikirjan luvussa ",(0,n.jsx)(t.a,{href:"https://www.typescriptlang.org/docs/handbook/2/everyday-types.html",children:"Everyday Types"})," ja olemme koonneet tiivistelm\xe4n aiheesta my\xf6s t\xe4lle sivulle."]}),"\n",(0,n.jsx)(t.h2,{id:"muuttujien-tyypit",children:"Muuttujien tyypit"}),"\n",(0,n.jsxs)(t.p,{children:["TypeScriptin tyypit ",(0,n.jsx)(t.code,{children:"string"}),", ",(0,n.jsx)(t.code,{children:"number"})," ja ",(0,n.jsx)(t.code,{children:"boolean"})," vastaavat suoraan JavaScriptin tyyppej\xe4. Selvimp\xe4n\xe4 erona JavaScriptin muuttujiin n\xe4hden TypeScriptin avulla muuttujat ovat ",(0,n.jsx)(t.em,{children:"staattisesti tyypitettyj\xe4"}),", eli niihin voidaan asettaa vain tiettyj\xe4 ennalta m\xe4\xe4riteltyj\xe4 tai p\xe4\xe4teltyj\xe4 arvoja."]}),"\n",(0,n.jsx)(t.p,{children:"Tyypit m\xe4\xe4ritell\xe4\xe4n muuttujien tapauksessa muuttujan m\xe4\xe4rittelyn yhteydess\xe4 kaksoispisteen j\xe4lkeen, eik\xe4 muuttujan tyyppi\xe4 voida en\xe4\xe4 my\xf6hemmin muuttaa:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",children:"let language: string = 'TypeScript';\n"})}),"\n",(0,n.jsx)(t.p,{children:"Vastaavalla tavalla voidaan m\xe4\xe4ritell\xe4 my\xf6s muut tyypit, kuten numerot ja totuusarvot:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",children:"// 'number' k\xe4sitt\xe4\xe4 sek\xe4 kokonais- ett\xe4 liukuluvut:\nlet wholeNumber: number = 2024;\nlet decimalNumber: number = 3.14;\n\n// totuusarvot:\nlet isLeapYear: boolean = true;\n"})}),"\n",(0,n.jsxs)(t.p,{children:["My\xf6s kokoelmille m\xe4\xe4ritell\xe4\xe4n TypeScriptiss\xe4 tyypit. Taulukkojen tyypit voidaan m\xe4\xe4ritell\xe4 joko syntaksilla ",(0,n.jsx)(t.code,{children:"tyyppi[]"})," tai ",(0,n.jsx)(t.code,{children:"Array<tyyppi>"}),":"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",children:"let words: string[] = ['one', 'two', 'three'];\nlet numbers: number[] = [1, 2, 3, 4];\n\nlet negative: Array<number> = [-1, -2, -3, -4]; // vaihtoehtoinen tapa\n"})}),"\n",(0,n.jsxs)(t.p,{children:["Edell\xe4 mainituista tavoista ",(0,n.jsx)(t.code,{children:"tyyppi[]"})," vaikuttaa olevan yleisesti laajemmin k\xe4yt\xf6ss\xe4 kuin ",(0,n.jsx)(t.code,{children:"Array<tyyppi>"}),", joten my\xf6s kurssin esimerkeiss\xe4 k\xe4ytet\xe4\xe4n jatkossa muotoa ",(0,n.jsx)(t.code,{children:"tyyppi[]"}),"."]}),"\n",(0,n.jsxs)(t.p,{children:["Tyyppien m\xe4\xe4rittely t\xe4ll\xe4 tarkkuudella ei onneksi ole usein tarpeen, koska TypeScript osaa my\xf6s monessa tapauksessa p\xe4\xe4tell\xe4 tyypit sijoitusoperaatioiden ja ",(0,n.jsx)(t.code,{children:"return"}),"-lauseiden perusteella. Tyyppien p\xe4\xe4ttelyst\xe4 k\xe4ytet\xe4\xe4n termi\xe4 ",(0,n.jsx)(t.em,{children:"type inference"})," ja sit\xe4 k\xe4sitell\xe4\xe4n tarkemmin seuraavissa kappaleissa."]}),"\n",(0,n.jsx)(t.h2,{id:"tyyppien-p\xe4\xe4tteleminen-type-inference",children:"Tyyppien p\xe4\xe4tteleminen (type inference)"}),"\n",(0,n.jsx)(t.p,{children:"Tyyppien m\xe4\xe4rittely yll\xe4 esitetyll\xe4 tarkkuudella ei ole usein tarpeen, koska TypeScript osaa p\xe4\xe4tell\xe4 asiayhteydest\xe4 mm. muuttujien sek\xe4 funktioiden paluuarvojen tyypit."}),"\n",(0,n.jsxs)(t.blockquote,{children:["\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.em,{children:'"For the most part you don\u2019t need to explicitly learn the rules of inference. If you\u2019re starting out, try using fewer type annotations than you think - you might be surprised how few you need for TypeScript to fully understand what\u2019s going on."'})}),"\n",(0,n.jsxs)(t.p,{children:["Microsoft. ",(0,n.jsx)(t.a,{href:"https://www.typescriptlang.org/docs/handbook/2/everyday-types.html",children:"TypeScript Handbook. Everyday Types"})]}),"\n"]}),"\n",(0,n.jsx)(t.p,{children:"Ilman yll\xe4 esitetty\xe4 vapaaehtoista tyyppien m\xe4\xe4rittely\xe4 koodi n\xe4ytt\xe4\xe4kin aivan JavaScriptilt\xe4. Vaikka muuttujille ei ole erikseen m\xe4\xe4ritetty alla tyyppej\xe4, k\xe4\xe4nt\xe4j\xe4 p\xe4\xe4ttelee tyypit ja osaa huomioida ne my\xf6hemmin n\xe4it\xe4 muuttujia k\xe4ytett\xe4ess\xe4:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",children:"let language = 'TypeScript';        // language: string\n\nlet wholeNumber = 2023;             // wholeNumber: number\nlet decimalNumber = 3.14;           // decimalNumber: number\n\nlet positive = [1, 2, 3, 4];        // positive: number[]\nlet negative = [-1, -2, -3, -4];    // negative: number[]\n"})}),"\n",(0,n.jsxs)(t.admonition,{title:"K\xe4\xe4nn\xf6svirhe",type:"danger",children:[(0,n.jsxs)(t.p,{children:["Vaikka muuttujille ei yll\xe4 ole m\xe4\xe4ritetty tyyppej\xe4, osaa TypeScript p\xe4\xe4tell\xe4 niiden oikeat arvot. Jos esimerkiksi ",(0,n.jsx)(t.code,{children:"number[]"})," tyyppiseen taulukkoon yritet\xe4\xe4n lis\xe4t\xe4 my\xf6hemmin muuntyyppisi\xe4 arvoja, seuraa niist\xe4 k\xe4\xe4nn\xf6svirhe:"]}),(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",children:"let positive = [1, 2, 3, 4];    // muuttujan tyypiksi p\xe4\xe4tell\xe4\xe4n number[]\npositive.push(42);              // ok\n\npositive.push('AA');            // ei ok, koska taulukon tyypiksi on p\xe4\xe4telty number[]\n//            ~~~~\n// Argument of type 'string' is not assignable to parameter of type 'number'.\n"})})]}),"\n",(0,n.jsx)(t.p,{children:"Tyypin m\xe4\xe4ritteleminen eksplisiittisesti on tarpeen erityisesti tyhjien tietorakenteiden ja funktion parametrien yhteydess\xe4. TypeScript ei pysty etuk\xe4teen p\xe4\xe4ttelem\xe4\xe4n, mit\xe4 arvoja tyhj\xe4\xe4n tietorakenteeseen tullaan tallentamaan tai mink\xe4 tyyppisill\xe4 parametreilla funktioita tullaan kutsumaan."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",children:"// t\xe4m\xe4n taulukon tyyppi\xe4 ei osata p\xe4\xe4tell\xe4:\nlet someValues = [];\n\n// number[] -> t\xe4h\xe4n voidaan jatkossa lis\xe4t\xe4 numeroita:\nlet lottery: number[] = [];\n"})}),"\n",(0,n.jsx)(t.h3,{id:"funktioiden-tyypit",children:"Funktioiden tyypit"}),"\n",(0,n.jsxs)(t.blockquote,{children:["\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.em,{children:'"Functions are the primary means of passing data around in JavaScript. TypeScript allows you to specify the types of both the input and output values of functions."'})}),"\n",(0,n.jsxs)(t.p,{children:["Microsoft. ",(0,n.jsx)(t.a,{href:"https://www.typescriptlang.org/docs/handbook/2/everyday-types.html#functions",children:"Everyday Types"})]}),"\n"]}),"\n",(0,n.jsxs)(t.p,{children:["TypeScript ei osaa p\xe4\xe4tell\xe4 funktioiden parametrien tyyppej\xe4, joten niiden m\xe4\xe4ritteleminen on p\xe4\xe4s\xe4\xe4nt\xf6isesti tarpeen. Sen sijaan ",(0,n.jsx)(t.strong,{children:"paluuaron tyyppi"})," voidaan tyypillisesti p\xe4\xe4tell\xe4 automaattisesti ",(0,n.jsx)(t.code,{children:"return"}),"-lausekkeessa olevasta tyypist\xe4, eik\xe4 sit\xe4 t\xe4ll\xf6in tarvitse kirjoittaa itse."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",children:"/**\n * Splits any multiline string into an array of strings.\n * The line delimiter may be either CRLF or LR.\n */\nfunction splitLines(text: string): string[] {\n    return text.split(/\\r?\\n/);\n}\n"})}),"\n",(0,n.jsxs)(t.p,{children:["Yll\xe4 olevassa esimerkiss\xe4 funktio hyv\xe4ksyy parametrikseen ainoastaan merkkijonon, joten parametrin tyyppi on m\xe4\xe4ritetty ",(0,n.jsx)(t.code,{children:"text: string"}),". Paluuarvona on taulukko merkkijonoja, eli ",(0,n.jsx)(t.code,{children:"string[]"}),"."]}),"\n",(0,n.jsxs)(t.p,{children:["Mik\xe4li parametrin tyyppi ",(0,n.jsx)(t.code,{children:"text: string"})," j\xe4tett\xe4isiin m\xe4\xe4rittelem\xe4tt\xe4, ei TypeScript tiet\xe4isi sen tyyppi\xe4, ja metodikutsun ",(0,n.jsx)(t.code,{children:"text.split(...)"})," oikeellisuutta ei voitaisi varmistaa."]}),"\n",(0,n.jsxs)(t.p,{children:["Paluuarvon tyyppi ",(0,n.jsx)(t.code,{children:"string[]"})," puolestaan voitaisiin t\xe4ss\xe4 tapauksessa j\xe4tt\xe4\xe4 my\xf6s kirjoittamatta, koska TypeScript osaa p\xe4\xe4tell\xe4 sen ",(0,n.jsx)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/split",children:"split-metodin"})," paluuarvosta. Esimerkkikoodissa ",(0,n.jsx)(t.code,{children:"text.split(/\\r?\\n/)"})," on huomioitu sek\xe4 ",(0,n.jsx)(t.code,{children:"\\r\\n"}),"- ett\xe4 ",(0,n.jsx)(t.code,{children:"\\n"}),"-tyyppiset rivinvaihdot, ja voit perehty\xe4 aiheeseen tarkemmin ",(0,n.jsx)(t.a,{href:"https://stackoverflow.com/q/21711768",children:"t\xe4ss\xe4 StackOverflow-ketjussa"}),"."]}),"\n",(0,n.jsx)(t.h3,{id:"taulukot-array",children:"Taulukot (array)"}),"\n",(0,n.jsxs)(t.p,{children:["Taulukot ovat tyypitettyj\xe4 siin\xe4 miss\xe4 yksitt\xe4iset muuttujat, esim. ",(0,n.jsx)(t.code,{children:"string[]"})," tai ",(0,n.jsx)(t.code,{children:"number[]"}),"."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",children:"let faces = ['\ud83d\ude00', '\ud83d\ude41'];          // string[]\nlet numbers = [7, 100, 42];         // number[]\n"})}),"\n",(0,n.jsx)(t.p,{children:"Arvoja lis\xe4tt\xe4ess\xe4 taulukkoon TypeScript varmistaa, ett\xe4 lis\xe4tt\xe4v\xe4 arvo on taulukon tyypin mukainen."}),"\n",(0,n.jsxs)(t.p,{children:["TypeScript ei kuitenkaan voi etuk\xe4teen tiet\xe4\xe4, l\xf6ytyyk\xf6 halutusta indeksist\xe4 koodia suoritettaessa arvoa. T\xe4ll\xf6in t\xf6rm\xe4\xe4t helposti tilanteeseen, jossa TypeScript p\xe4\xe4ttelee tyypiksi esimerkiksi ",(0,n.jsx)(t.code,{children:"undefined | string"}),":"]}),"\n",(0,n.jsx)(t.admonition,{title:"K\xe4\xe4nn\xf6svirhe",type:"danger",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",children:"let days = ['Monday', 'Tuesday', 'Wednesday'];\n\nlet first = days.at(0);   // undefined | string\nfirst.toUpperCase();\n// Error: 'first' is possibly 'undefined'.\n"})})}),"\n",(0,n.jsxs)(t.p,{children:["Jos olet aivan varma tietyn arvon tyypist\xe4, voit k\xe4ytt\xe4\xe4 ",(0,n.jsx)(t.code,{children:"as"}),"-avainsanaa, joka ohittaa TypeScriptin p\xe4\xe4ttelylogiikan. Vaihtoehtoisesti voit k\xe4ytt\xe4\xe4 ",(0,n.jsx)(t.a,{href:"https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-0.html#non-null-assertion-operator",children:'"non-null assertion"-operaattoria'}),", eli huutomerkki\xe4 ",(0,n.jsx)(t.code,{children:"!"}),", joka ohittaa tyhj\xe4n arvon tarkastamisen:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",children:"let days = ['Monday', 'Tuesday', 'Wednesday'];\n\nlet second = days.at(1) as string;   // string\nlet last = days.at(-1)!;             // string\n"})}),"\n",(0,n.jsxs)(t.p,{children:["Huomaa, ett\xe4 ",(0,n.jsx)(t.code,{children:"!"}),"- ja ",(0,n.jsx)(t.code,{children:"as"}),"-operaattorit eiv\xe4t takaa, ett\xe4 arvo olisi oikeasti ajonaikaisesti olemassa. Siksi on t\xe4rke\xe4\xe4 my\xf6s tarkastaa esimerkiksi taulukon pituus ennen kuin haet arvoja tietyist\xe4 indekseist\xe4."]}),"\n",(0,n.jsxs)(t.admonition,{title:"at-metodi",type:"tip",children:[(0,n.jsxs)(t.p,{children:["Edell\xe4 k\xe4ytetty ",(0,n.jsxs)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/at",children:[(0,n.jsx)(t.code,{children:"at"}),"-metodi"]})," on osa JavaScripti\xe4 ja se toimii monilta osin kuten hakasulkuperaattori ",(0,n.jsx)(t.code,{children:"values[0]"}),". Merkitt\xe4v\xe4mp\xe4n\xe4 erona ",(0,n.jsx)(t.code,{children:"at"}),"-metodi toimii sek\xe4 positiivisilla ett\xe4 negatiivisilla indekseill\xe4:"]}),(0,n.jsxs)(t.blockquote,{children:["\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.em,{children:'"The at() method takes an integer value and returns the item at that index, allowing for positive and negative integers. Negative integers count back from the last item in the array."'})}),"\n",(0,n.jsxs)(t.p,{children:["Mozilla. ",(0,n.jsx)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/at",children:"Array.prototype.at()"})]}),"\n"]})]}),"\n",(0,n.jsx)(t.h3,{id:"suorituksen-aikaiset-tyypit",children:"Suorituksen aikaiset tyypit"}),"\n",(0,n.jsx)(t.p,{children:'Koska TypeScript-koodi k\xe4\xe4nnet\xe4\xe4n JavaScriptiksi, ei koodia suoritettaessa voida k\xe4ytt\xe4\xe4 TypeScriptin tyyppej\xe4. Kaikki tieto TypeScriptin tyypeist\xe4 "katoaakin" k\xe4\xe4nnett\xe4ess\xe4 ja j\xe4ljelle j\xe4\xe4 vain JavaScriptin tyypit:'}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",children:"class Cat {\n    constructor(public name: string) {\n    }\n}\n\nclass Car {\n    constructor(public make: string, public model: string) {\n     }\n}\n\nlet animal = new Cat('kisu');\nlet automobile = new Car('VW', 'Beetle');\nlet strings = ['typescript', 'javascript'];\n\n// tieto luokista katoaa k\xe4\xe4nnett\xe4ess\xe4.\n// Koodia suoritettaessa sek\xe4 olioista ett\xe4 taulukoista tulostuu tyypiksi `object`:\nconsole.log(typeof animal);     // 'object'\nconsole.log(typeof automobile); // 'object'\nconsole.log(typeof strings);    // 'object'\n"})}),"\n",(0,n.jsxs)(t.p,{children:["Palaamme tyyppien tarkastamiseen suorituksen aikana my\xf6hemmin mm. ",(0,n.jsx)(t.a,{href:"/docs/tyypit/type-guards",children:'"Tyyppivahdit"-luvussa'}),"."]}),"\n",(0,n.jsx)(t.h3,{id:"any-ja-unknown",children:"Any ja unknown"}),"\n",(0,n.jsxs)(t.p,{children:["Toisinaan datan tyyppi ei ole tiedossa tai sill\xe4 ei ole merkityst\xe4. TypeScriptin ",(0,n.jsx)(t.code,{children:"any"}),'-tyyppi kytkee TypeScriptin tyyppitarkastukset "pois p\xe4\xe4lt\xe4" kyseisen arvon kohdalta:']}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",children:"// `any` tyyppi\xe4 voidaan k\xe4ytt\xe4\xe4 silloin, kun arvon tyypill\xe4 ei ole merkityst\xe4:\nfunction logAnything(thing: any) {\n    console.log(new Date(), thing);\n}\n"})}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:"any"}),"-tyyppi sallii, ett\xe4 muuttujan kautta kutsutaan mit\xe4 tahansa metodia tai ett\xe4 siihen asetettua arvoa k\xe4ytet\xe4\xe4n miss\xe4 tahansa laskuoperaatiossa. T\xe4m\xe4 ei ole usein toivottavaa. Esimerkiksi seuraava koodi aiheuttaa virheen vasta koodia suoritettaessa:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",children:"function logAnything(thing: any) {\n    console.log(new Date(), thing.substring(0, 10));\n}\n\n// aiheuttaa suoritettaessa virheen TypeError: thing.substring is not a function\nlogAnything(123);\n"})}),"\n",(0,n.jsxs)(t.p,{children:["Mik\xe4li arvon tyypill\xe4 ei ole merkityst\xe4, tai se ei ole ennalta tiedossa, on turvallisempaa k\xe4ytt\xe4\xe4 vaihtoehtoista ",(0,n.jsx)(t.code,{children:"unknown"}),"-tyyppi\xe4. ",(0,n.jsx)(t.code,{children:"unknown"})," sallii ",(0,n.jsx)(t.code,{children:"any"}),":n"," tavoin mink\xe4 tahansa arvon, mutta se ei kytke tyyppitarkastuksia pois p\xe4\xe4lt\xe4. Sen sijaan se est\xe4\xe4 kaikki operaatiot, kuten metodikutsut, tuntemattoman muuttujan kautta:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",children:"// usein on kuitenkin turvallisempaa k\xe4ytt\xe4\xe4 tyyppi\xe4 `unknown`:\nfunction logUnknown(thing: unknown) {\n    console.log(new Date(), thing);\n}\n"})}),"\n",(0,n.jsxs)(t.p,{children:["T\xe4ll\xe4 versiolla ",(0,n.jsx)(t.code,{children:"thing.substring(0, 10)"})," aiheuttaisi \"Property 'substring' does not exist on type 'unknown'\"-virheen jo koodia kirjoitettaessa tai viimeist\xe4\xe4n k\xe4\xe4nn\xf6svaiheessa."]}),"\n",(0,n.jsxs)(t.p,{children:["Edell\xe4 esitetyist\xe4 tyypeist\xe4 ",(0,n.jsx)(t.code,{children:"any"})," on siis siin\xe4 mieless\xe4 riskialttiimpi, ett\xe4 sen kautta teht\xe4vien operaatioiden osalta TS ei tee tarkastuksia. Unknown-tyyppi puolestaan aiheuttaa virheen heti k\xe4\xe4nn\xf6svaiheessa, mik\xe4li sen kautta ollaan suorittamassa mahdollisesti virheellisi\xe4 operaatioita:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",children:"let a: any = 1;\nlet u: unknown = 1;\n\na.toUpperCase(); // aiheuttaa virheen vasta suoritettaessa\n\nu.toUpperCase(); // aiheuttaa virheen kirjoitettaessa tai k\xe4\xe4nnett\xe4ess\xe4\n// ~~~~~~~~~~~~  Property 'toUpperCase' does not exist on type 'unknown'\n"})}),"\n",(0,n.jsx)(t.h3,{id:"tyypin-tarkastaminen-ajonaikaisesti",children:"Tyypin tarkastaminen ajonaikaisesti"}),"\n",(0,n.jsxs)(t.p,{children:["Kuten ",(0,n.jsx)(t.a,{href:"/docs/perusteet/mika-on-typescript",children:"TypeScriptin ominaisuuksia k\xe4sitelt\xe4ess\xe4"})," totesimme, TypeScript-koodi k\xe4\xe4nnet\xe4\xe4n JavaScriptiksi. Siksi on keskeist\xe4 hahmottaa, miten tyyppien tarkastaminen TypeScriptill\xe4 k\xe4\xe4nn\xf6svaiheessa eroaa mahdollisten tyyppien tarkastamisesta JavaScript-suoritusymp\xe4rist\xf6ss\xe4 ajonaikaisesti."]}),"\n",(0,n.jsx)(t.p,{children:"TypeScript tarkastaa tyypit automaattisesti k\xe4\xe4nn\xf6svaiheessa hy\xf6dynt\xe4en TypeScriptin tyyppij\xe4rjestelm\xe4\xe4, mutta JavaScriptin ajonaikainen tyyppij\xe4rjestelm\xe4 on paljon rajoittuneempi. JavaScript osaakin erottaa l\xe4hinn\xe4 numerot, merkkijonot, totuusarvot, funktiot ja oliot toisistaan."}),"\n",(0,n.jsxs)(t.p,{children:["Jos k\xe4sitelt\xe4v\xe4n arvon tyyppi ei ole ennalta tiedossa, voidaan se selvitt\xe4\xe4 ajonaikaisesti ehtorakenteilla ja mm. ",(0,n.jsxs)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/typeof",children:["JavaScriptin ",(0,n.jsx)(t.code,{children:"typeof"}),"-operaation avulla"]}),"."]}),"\n",(0,n.jsx)(t.h4,{id:"esimerkki-repeat",children:"Esimerkki: repeat"}),"\n",(0,n.jsxs)(t.p,{children:["Seuraavassa esimerkiss\xe4 ",(0,n.jsx)(t.code,{children:"repeat"}),"-funktio toistaa annettua arvoa eri tavoilla riippuen siit\xe4, mink\xe4 tyyppinen arvo sinne annettiin. Merkkijonoa toistetaan ",(0,n.jsx)(t.code,{children:"repeat"}),"-metodilla tekem\xe4ll\xe4 yksi uusi, pidempi merkkijono, kun taas taulukon tapauksessa taulukon sis\xe4lt\xf6\xe4 toistetaan annettu m\xe4\xe4r\xe4 kertoja:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",children:"function repeat(thing: unknown, times: number) {\n    if (typeof thing === 'string') {\n        // TypeScript p\xe4\xe4ttelee `thing`-muuttujan tyypiksi `string`\n        return thing.repeat(times);\n    }\n\n    if (Array.isArray(thing)) {\n        // TypeScript p\xe4\xe4ttelee nyt `thing`-muuttujan tyypiksi `any[]`\n        return new Array(times).fill(thing).flat();\n    }\n\n    // jos annettu tyyppi on tuntematon, heitet\xe4\xe4n poikkeus\n    throw new Error(`Could not repeat ${thing}`);\n}\n"})}),"\n",(0,n.jsxs)(t.p,{children:["Huomaa, ett\xe4 yll\xe4 ",(0,n.jsx)(t.code,{children:"typeof"})," on JavaScriptin eik\xe4 TypeScriptin ominaisuus. ",(0,n.jsx)(t.a,{href:"https://www.typescriptlang.org/docs/handbook/2/narrowing.html#typeof-type-guards",children:"Se toimiikin ainoastaan JavaScriptin omien perustyyppien tarkastamisessa"}),", eik\xe4 sill\xe4 voida tarkastaa esimerkiksi luokkia, taulukoita tai TypeScriptin tyyppej\xe4 ja rajapintoja."]}),"\n",(0,n.jsxs)(t.p,{children:["Koska JavaScriptiss\xe4 taulukot ovat tyyppi\xe4 ",(0,n.jsx)(t.code,{children:"object"}),", on yll\xe4 hy\xf6dynnetty ",(0,n.jsx)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray",children:"JavaScriptin Array.isArray-metodia"})," taulukon tarkastamiseksi."]}),"\n",(0,n.jsxs)(t.admonition,{title:"Taulukon kopiointi",type:"tip",children:[(0,n.jsxs)(t.p,{children:["Taulukon toistamiseksi hy\xf6dynnet\xe4\xe4n ominaisuutta, jossa ensin luodaan uusi taulukko ",(0,n.jsx)(t.code,{children:"new Array(times)"}),", jonka pituus m\xe4\xe4r\xe4ytyy toistokertojen mukaan."]}),(0,n.jsxs)(t.p,{children:["T\xe4m\xe4n j\xe4lkeen luodun taulukon jokaiseen soluun lis\xe4t\xe4\xe4n alkuper\xe4inen taulukko ",(0,n.jsxs)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/fill",children:[(0,n.jsx)(t.code,{children:"fill"}),"-metodilla"]}),"."]}),(0,n.jsxs)(t.p,{children:["Luomamme taulukko sis\xe4lt\xe4\xe4 nyt halutun m\xe4\xe4r\xe4n uusia taulukoita, esim. ",(0,n.jsx)(t.code,{children:"[[1, 2], [1, 2]]"}),', jotka saadaan "litistetty\xe4" ',(0,n.jsxs)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/flat",children:[(0,n.jsx)(t.code,{children:"flat"}),"-metodilla"]})," yksitasoiseksi taulukoksi: ",(0,n.jsx)(t.code,{children:"[1, 2, 1, 2]"}),". Ratkaisu perustuu ",(0,n.jsx)(t.a,{href:"https://stackoverflow.com/a/61773807",children:"t\xe4ss\xe4 StackOverflow-ketjussa"})," esitettyihin koodeihin."]})]}),"\n",(0,n.jsxs)(t.p,{children:["Koska edell\xe4 esitetty ",(0,n.jsx)(t.code,{children:"repeat"}),"-funktio osaa k\xe4sitell\xe4 ainoastaan taulukoita tai merkkijonoja, olisi siin\xe4 parempi k\xe4ytt\xe4\xe4 parametrin tyyppin\xe4 yhdistelm\xe4\xe4: ",(0,n.jsx)(t.code,{children:"string | any[]"}),"."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",children:"function repeat(thing: string | any[], times: number) {\n    if (typeof thing === 'string') {\n        return thing.repeat(times);\n    } else {\n        return new Array(times).fill(thing).flat();\n    }\n}\n"})}),"\n",(0,n.jsxs)(t.p,{children:["T\xe4ll\xf6in k\xe4\xe4nt\xe4j\xe4 osaa jo etuk\xe4teen varoittaa, jos funktiolle ollaan antamassa ep\xe4sopivaa tyyppi\xe4, eik\xe4 ",(0,n.jsx)(t.code,{children:"throw new Error(...)"}),"-rivi\xe4 tarvita. Tyyppien yhdist\xe4misest\xe4 kerrotaan tarkemmin ",(0,n.jsx)(t.a,{href:"/docs/tyypit/unions-intersections",children:"omassa luvussaan"}),"."]})]})}function u(e={}){const{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(y,{...e})}):y(e)}},1151:(e,t,i)=>{i.d(t,{Z:()=>o,a:()=>r});var n=i(7294);const a={},s=n.createContext(a);function r(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);